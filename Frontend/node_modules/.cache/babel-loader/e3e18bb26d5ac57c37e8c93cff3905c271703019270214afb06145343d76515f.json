{"ast":null,"code":"import _regeneratorRuntime from\"/home/prateek/Downloads/coursecrud/node_modules/@babel/runtime/helpers/esm/regeneratorRuntime.js\";import _asyncToGenerator from\"/home/prateek/Downloads/coursecrud/node_modules/@babel/runtime/helpers/esm/asyncToGenerator.js\";import _slicedToArray from\"/home/prateek/Downloads/coursecrud/node_modules/@babel/runtime/helpers/esm/slicedToArray.js\";import{useState,useEffect}from'react';import loginService from'./services/login';import billService from'./services/bills';import deleteService from'./services/delete';import updateService from'./services/update';import listService from'./services/list';import Notification from'./components/Notification';import LoginForm from'./components/LoginForm';import NavBar from'./components/NavBar';import Bills from'./components/Bills';import Delete from'./components/Delete';import Update from'./components/Update';import List from'./components/List';import{jsx as _jsx}from\"react/jsx-runtime\";import{jsxs as _jsxs}from\"react/jsx-runtime\";var App=function App(){// user state will store the logged in user object, if no login has been done yet then it will be null\nvar _useState=useState(null),_useState2=_slicedToArray(_useState,2),user=_useState2[0],setUser=_useState2[1];// Will store the bills of the logged in user\nvar _useState3=useState([]),_useState4=_slicedToArray(_useState3,2),bills=_useState4[0],setBills=_useState4[1];// These states are used to control the notifications that show up at the top of the screen for events like \n// login, signup, watchlist creation, etc.\nvar _useState5=useState(null),_useState6=_slicedToArray(_useState5,2),notification=_useState6[0],setNotification=_useState6[1];var _useState7=useState(null),_useState8=_slicedToArray(_useState7,2),notificationType=_useState8[0],setNotificationType=_useState8[1];// Create a notification at the top of the screen with given message for 10 seconds \n// Notifications are of two types, \"error\" and \"success\"\n// The appearance of these two notifications can be adjusted via the index.css file\nvar notificationHandler=function notificationHandler(message,type){setNotification(message);setNotificationType(type);setTimeout(function(){setNotificationType(null);setNotification(null);},3000);};// Function that handles login of users\nvar handleLogin=/*#__PURE__*/function(){var _ref=_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime().mark(function _callee(credentials){var userObject;return _regeneratorRuntime().wrap(function _callee$(_context){while(1){switch(_context.prev=_context.next){case 0:_context.prev=0;_context.next=3;return loginService.login(credentials);case 3:userObject=_context.sent;setUser(userObject);window.localStorage.setItem('loggedInUser',JSON.stringify(userObject));notificationHandler(\"Logged in successfully as \".concat(userObject.firstName),'success');setBills([]);_context.next=13;break;case 10:_context.prev=10;_context.t0=_context[\"catch\"](0);notificationHandler(\"Log in failed, check username and password entered\",'error');case 13:case\"end\":return _context.stop();}}},_callee,null,[[0,10]]);}));return function handleLogin(_x){return _ref.apply(this,arguments);};}();var handleCourseUpdate=/*#__PURE__*/function(){var _ref2=_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime().mark(function _callee2(credentials){var userObject;return _regeneratorRuntime().wrap(function _callee2$(_context2){while(1){switch(_context2.prev=_context2.next){case 0:_context2.prev=0;_context2.next=3;return updateService.updatecourse(credentials);case 3:userObject=_context2.sent;notificationHandler(\"Course Updated Successfully, \".concat(userObject),'success');_context2.next=10;break;case 7:_context2.prev=7;_context2.t0=_context2[\"catch\"](0);notificationHandler(\"Course Update Failed \".concat(credentials.courseID),'error');case 10:case\"end\":return _context2.stop();}}},_callee2,null,[[0,7]]);}));return function handleCourseUpdate(_x2){return _ref2.apply(this,arguments);};}();var handleCourseDelete=/*#__PURE__*/function(){var _ref3=_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime().mark(function _callee3(credentials){var userObject;return _regeneratorRuntime().wrap(function _callee3$(_context3){while(1){switch(_context3.prev=_context3.next){case 0:_context3.prev=0;_context3.next=3;return deleteService.deletecourse(credentials);case 3:userObject=_context3.sent;notificationHandler(\"Course Deleted Successfully, \".concat(userObject),'success');_context3.next=10;break;case 7:_context3.prev=7;_context3.t0=_context3[\"catch\"](0);notificationHandler(\"Course Deletion Failed For \".concat(credentials.courseID),'error');case 10:case\"end\":return _context3.stop();}}},_callee3,null,[[0,7]]);}));return function handleCourseDelete(_x3){return _ref3.apply(this,arguments);};}();var handleCourseList=/*#__PURE__*/function(){var _ref4=_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime().mark(function _callee4(){var userObject;return _regeneratorRuntime().wrap(function _callee4$(_context4){while(1){switch(_context4.prev=_context4.next){case 0:_context4.prev=0;_context4.next=3;return listService.listcourse();case 3:userObject=_context4.sent;notificationHandler(\"Course Deleted Successfully, \".concat(userObject),'success');_context4.next=10;break;case 7:_context4.prev=7;_context4.t0=_context4[\"catch\"](0);notificationHandler(\"Course Deletion Failed For\",'error');case 10:case\"end\":return _context4.stop();}}},_callee4,null,[[0,7]]);}));return function handleCourseList(){return _ref4.apply(this,arguments);};}();// Effect Hook that fetches a user's bills\n// If \"user\" state changes, then the new bills must be fetched.\n// This is why \"user\" is part of the dependency array of this hook\n// MIGHT HAVE TO CHANGE THIS LATER TO PROMISE CHAINING IF IT FAILS\nuseEffect(function(){function fetchData(){return _fetchData.apply(this,arguments);}function _fetchData(){_fetchData=_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime().mark(function _callee5(){var _bills;return _regeneratorRuntime().wrap(function _callee5$(_context5){while(1){switch(_context5.prev=_context5.next){case 0:if(!user){_context5.next=5;break;}_context5.next=3;return billService.getUserBills(user);case 3:_bills=_context5.sent;setBills(_bills);case 5:case\"end\":return _context5.stop();}}},_callee5);}));return _fetchData.apply(this,arguments);}fetchData();},[user]);// Effect Hook that parses the local storage for 'loggedInUser' and sets the \"user\" state if a valid match is found\n// This enables user to login automatically without having to type in the credentials. Caching the login if you will.\nuseEffect(function(){var loggedInUser=window.localStorage.getItem('loggedInUser');if(loggedInUser)setUser(JSON.parse(loggedInUser));},[]);return/*#__PURE__*/_jsxs(\"div\",{children:[/*#__PURE__*/_jsx(\"div\",{className:\"text-center page-header p-2 regular-text-shadow regular-shadow\",children:/*#__PURE__*/_jsx(\"div\",{className:\"display-4 font-weight-bold\",children:\"Academia - Courses\"})}),/*#__PURE__*/_jsx(Notification,{notification:notification,type:notificationType}),/* Show Login form when no login has happened */user===null&&/*#__PURE__*/_jsx(LoginForm,{startLogin:handleLogin}),/* Show NavBar when login has happened */user!==null&&/*#__PURE__*/_jsx(NavBar,{user:user,setUser:setUser}),/* Show Login form when no login has happened */user!==null&&/*#__PURE__*/_jsx(Update,{update:handleCourseUpdate}),/* Show Login form when no login has happened */user!==null&&/*#__PURE__*/_jsx(Delete,{deletes:handleCourseDelete}),/* Show Login form when no login has happened */user!==null&&/*#__PURE__*/_jsx(List,{lists:handleCourseList})]});};export default App;","map":{"version":3,"names":["useState","useEffect","loginService","billService","deleteService","updateService","listService","Notification","LoginForm","NavBar","Bills","Delete","Update","List","App","user","setUser","bills","setBills","notification","setNotification","notificationType","setNotificationType","notificationHandler","message","type","setTimeout","handleLogin","credentials","login","userObject","window","localStorage","setItem","JSON","stringify","firstName","handleCourseUpdate","updatecourse","courseID","handleCourseDelete","deletecourse","handleCourseList","listcourse","fetchData","getUserBills","loggedInUser","getItem","parse"],"sources":["/home/prateek/Downloads/coursecrud/src/App.js"],"sourcesContent":["import { useState, useEffect } from 'react'\n\nimport loginService from './services/login'\nimport billService from './services/bills'\nimport deleteService from './services/delete'\nimport updateService from './services/update'\nimport listService from './services/list'\n\nimport Notification from './components/Notification'\nimport LoginForm from './components/LoginForm'\nimport NavBar from './components/NavBar'\nimport Bills from './components/Bills'\nimport Delete from './components/Delete'\nimport Update from './components/Update'\nimport List from './components/List'\n\nconst App = () => {\n  // user state will store the logged in user object, if no login has been done yet then it will be null\n  const [ user, setUser ] = useState(null)\n\n  // Will store the bills of the logged in user\n  const [ bills, setBills ] = useState([])\n\n  // These states are used to control the notifications that show up at the top of the screen for events like \n  // login, signup, watchlist creation, etc.\n  const [ notification, setNotification ] = useState(null)\n  const [ notificationType, setNotificationType ] = useState(null)\n\n  // Create a notification at the top of the screen with given message for 10 seconds \n  // Notifications are of two types, \"error\" and \"success\"\n  // The appearance of these two notifications can be adjusted via the index.css file\n  const notificationHandler = (message, type) => {\n    setNotification(message)\n    setNotificationType(type)\n\n    setTimeout(() => {\n      setNotificationType(null)\n      setNotification(null)\n    }, 3000)\n  }\n\n  // Function that handles login of users\n  const handleLogin = async (credentials) => {\n    try {\n      const userObject = await loginService.login(credentials)\n      setUser(userObject)\n      window.localStorage.setItem('loggedInUser', JSON.stringify(userObject))\n      \n      notificationHandler(`Logged in successfully as ${userObject.firstName}`, 'success')\n      setBills([])\n    }\n    catch (exception) {\n      notificationHandler(`Log in failed, check username and password entered`, 'error')\n    }\n  }\n\n  const handleCourseUpdate = async (credentials) => {\n    try {\n      const userObject = await updateService.updatecourse(credentials)\n     \n      \n      notificationHandler(`Course Updated Successfully, ${userObject}`, 'success')\n      \n    }\n    catch (exception) {\n      notificationHandler(`Course Update Failed ${credentials.courseID}`, 'error')\n    }\n  }\n\n  const handleCourseDelete = async (credentials) => {\n    try {\n      const userObject = await deleteService.deletecourse(credentials)  \n      \n      notificationHandler(`Course Deleted Successfully, ${userObject}`, 'success')\n      \n    }\n    catch (exception) {\n      notificationHandler(`Course Deletion Failed For ${credentials.courseID}`, 'error')\n    }\n  }\n\n  const handleCourseList = async () => {\n    try {\n      const userObject = await listService.listcourse()  \n      \n      notificationHandler(`Course Deleted Successfully, ${userObject}`, 'success')\n      \n    }\n    catch (exception) {\n      notificationHandler(`Course Deletion Failed For`, 'error')\n    }\n  }\n  \n  // Effect Hook that fetches a user's bills\n  // If \"user\" state changes, then the new bills must be fetched.\n  // This is why \"user\" is part of the dependency array of this hook\n  // MIGHT HAVE TO CHANGE THIS LATER TO PROMISE CHAINING IF IT FAILS\n  useEffect(() => {\n      async function fetchData() {\n        if (user) {\n          const bills = await billService.getUserBills(user)\n          setBills(bills)\n        }\n      }\n      fetchData()\n  }, [user])\n\n\n  // Effect Hook that parses the local storage for 'loggedInUser' and sets the \"user\" state if a valid match is found\n  // This enables user to login automatically without having to type in the credentials. Caching the login if you will.\n  useEffect(() => {\n    const loggedInUser = window.localStorage.getItem('loggedInUser')\n    if (loggedInUser)\n      setUser(JSON.parse(loggedInUser))\n  }, [])\n\n  return (\n    <div>\n      {/* Header of the page */}\n      <div className='text-center page-header p-2 regular-text-shadow regular-shadow'>\n          <div className='display-4 font-weight-bold'>\n            Academia - Courses\n          </div>\n      </div>\n      \n      {/* Notification component that will render only when the notification state is not null */}\n      <Notification notification={notification} type={notificationType} />\n\n      {\n        /* Show Login form when no login has happened */\n        user === null && \n        <LoginForm startLogin={handleLogin}/>\n      }\n\n      {\n        /* Show NavBar when login has happened */\n        user !== null && \n        <NavBar user={user} setUser={setUser}/>\n      } \n\n      {\n        // /* Show Bills of the User when login has happened */\n        // user !== null &&\n        // <Bills\n        //   bills={bills}\n        //   payBill={payBill}\n        // />\n      }\n\n      {\n        /* Show Login form when no login has happened */\n        user !== null && \n        <Update update={handleCourseUpdate}/>\n      }\n\n      {\n        /* Show Login form when no login has happened */\n        user !== null && \n        <Delete deletes={handleCourseDelete}\n        />\n      }\n      \n      {\n        /* Show Login form when no login has happened */\n        user !== null && \n        <List lists={handleCourseList}/>\n      }\n\n    </div>\n  )\n}\n\nexport default App;\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}