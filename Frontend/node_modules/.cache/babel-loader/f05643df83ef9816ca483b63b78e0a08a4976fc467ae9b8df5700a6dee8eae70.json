{"ast":null,"code":"var _jsxFileName = \"/home/prateek/Downloads/coursecrud/src/components/Delete.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\n\n/*\n  This component renders the Login Form with all its functionalities\n  startLogin is the method that uses the axios service to submit login credentials to the backend\n*/\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Delete = _ref => {\n  _s();\n  let {\n    deleted\n  } = _ref;\n  // States for tracking form input which are the email address and password\n  const [courseID, setCourseID] = useState('');\n\n  // onSubmit event handler of this form\n  const handleDelete = event => {\n    // Preventing default submission of the form to the action attribute URL\n    event.preventDefault();\n    const credentials = {\n      courseID\n    };\n\n    // Calling startLogin with the provided credentials that will make a call to the backend\n    deleted(credentials);\n\n    // Reset the form state, i.e. the text that's on the username and password text boxes to empty strings\n    setCourseID('');\n    // setupdatedName('')\n  };\n\n  // Typically keep id attributes on your HTML elements so that they can be styled using CSS\n  return /*#__PURE__*/_jsxDEV(\"form\", {\n    onSubmit: handleDelete,\n    id: \"login-form\",\n    children: [/*#__PURE__*/_jsxDEV(\"input\", {\n      type: \"courseID\",\n      placeholder: \"COURSE-ID\"\n      // Note that the text that's displayed on the textbox (value attribute) is controlled by the email state\n      ,\n      value: courseID\n      // onChange event handler\n      // When you type something on the textbox, the onChange event handler will be triggered\n      // This event handler as written below, updates the email state with what's being typed by the user\n      // Because a state has been updated, the form component will be re-rendered and you can see the updated input\n      // on the screen, obviously this happens so fast that you cannot see it but this is the entire procedure\n      ,\n      onChange: event => setCourseID(event.target.value),\n      id: \"courseID\",\n      required: true\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 31,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      type: \"submit\",\n      id: \"delete-submit\",\n      children: \"DELETE\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 47,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 30,\n    columnNumber: 5\n  }, this);\n};\n\n// Styled Form\n// return (\n//   <div className='form-container'>\n//     <div className='form-box regular-shadow'>\n\n//       <div className='header-form'>\n//         <h4 className='text-primary text-center'>\n//           <i className='fa fa-user-circle' style={{fontSize:'110px', color: 'lightblue'}}></i>\n//         </h4>\n//         <div className='image'></div>\n//       </div>\n\n//       <div className='body-form'>\n//         <form onSubmit={handleLogin} id='login-form'>\n\n//           <div className='input-group mb-3'>\n//             <div className='input-group-prepend'>\n//               <span className='input-group-text'><i className='fa fa-user'></i></span>\n//             </div>\n//             <input \n//               type='text'\n//               className='form-control'\n//               placeholder='Email Address'\n//               value={email}\n//               onChange={event => setEmail(event.target.value)}\n//               id='email'\n//               required\n//             />\n//           </div>\n\n//           <div className='input-group mb-3'>\n//             <div className='input-group-prepend'>\n//               <span className='input-group-text'><i className='fa fa-lock'></i></span>\n//             </div>\n//             <input\n//               type='password'\n//               className='form-control'\n//               placeholder='Password'\n//               value={password}\n//               onChange={event => setPassword(event.target.value)}\n//               id='password'\n//               required\n//             />\n//           </div>\n\n//           <button type='submit' className='btn btn-primary btn-block' id='login-submit'>LOGIN</button>\n//         </form>\n//       </div>\n//     </div>\n//   </div>   \n// )\n_s(Delete, \"tg0Xl0KMx4/xVHCMYAkFab4jJ5s=\");\n_c = Delete;\nexport default Delete;\nvar _c;\n$RefreshReg$(_c, \"Delete\");","map":{"version":3,"names":["React","useState","Delete","deleted","courseID","setCourseID","handleDelete","event","preventDefault","credentials","target","value"],"sources":["/home/prateek/Downloads/coursecrud/src/components/Delete.js"],"sourcesContent":["import React, { useState } from 'react'\n\n/*\n  This component renders the Login Form with all its functionalities\n  startLogin is the method that uses the axios service to submit login credentials to the backend\n*/\nconst Delete = ({ deleted }) => {\n  // States for tracking form input which are the email address and password\n  const [ courseID, setCourseID ] = useState('')\n\n  // onSubmit event handler of this form\n  const handleDelete = (event) => {\n    // Preventing default submission of the form to the action attribute URL\n    event.preventDefault()\n\n    const credentials = {\n      courseID\n    }\n\n    // Calling startLogin with the provided credentials that will make a call to the backend\n    deleted(credentials)\n\n    // Reset the form state, i.e. the text that's on the username and password text boxes to empty strings\n    setCourseID('')\n    // setupdatedName('')\n  }\n\n  // Typically keep id attributes on your HTML elements so that they can be styled using CSS\n  return (\n    <form onSubmit={handleDelete} id='login-form'>\n      <input \n        type='courseID'\n        placeholder='COURSE-ID'\n        // Note that the text that's displayed on the textbox (value attribute) is controlled by the email state\n        value={courseID}\n        // onChange event handler\n        // When you type something on the textbox, the onChange event handler will be triggered\n        // This event handler as written below, updates the email state with what's being typed by the user\n        // Because a state has been updated, the form component will be re-rendered and you can see the updated input\n        // on the screen, obviously this happens so fast that you cannot see it but this is the entire procedure\n        onChange={event => setCourseID(event.target.value)}\n        id='courseID'\n        required\n      />\n        \n      {/* Submit button for the form */}\n      <button type='submit' id='delete-submit'>DELETE</button>\n    </form>\n  )\n}\n\n// Styled Form\n  // return (\n  //   <div className='form-container'>\n  //     <div className='form-box regular-shadow'>\n\n  //       <div className='header-form'>\n  //         <h4 className='text-primary text-center'>\n  //           <i className='fa fa-user-circle' style={{fontSize:'110px', color: 'lightblue'}}></i>\n  //         </h4>\n  //         <div className='image'></div>\n  //       </div>\n\n  //       <div className='body-form'>\n  //         <form onSubmit={handleLogin} id='login-form'>\n\n  //           <div className='input-group mb-3'>\n  //             <div className='input-group-prepend'>\n  //               <span className='input-group-text'><i className='fa fa-user'></i></span>\n  //             </div>\n  //             <input \n  //               type='text'\n  //               className='form-control'\n  //               placeholder='Email Address'\n  //               value={email}\n  //               onChange={event => setEmail(event.target.value)}\n  //               id='email'\n  //               required\n  //             />\n  //           </div>\n\n  //           <div className='input-group mb-3'>\n  //             <div className='input-group-prepend'>\n  //               <span className='input-group-text'><i className='fa fa-lock'></i></span>\n  //             </div>\n  //             <input\n  //               type='password'\n  //               className='form-control'\n  //               placeholder='Password'\n  //               value={password}\n  //               onChange={event => setPassword(event.target.value)}\n  //               id='password'\n  //               required\n  //             />\n  //           </div>\n\n  //           <button type='submit' className='btn btn-primary btn-block' id='login-submit'>LOGIN</button>\n  //         </form>\n  //       </div>\n  //     </div>\n  //   </div>   \n  // )\n\nexport default Delete"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,QAAQ,OAAO;;AAEvC;AACA;AACA;AACA;AAHA;AAIA,MAAMC,MAAM,GAAG,QAAiB;EAAA;EAAA,IAAhB;IAAEC;EAAQ,CAAC;EACzB;EACA,MAAM,CAAEC,QAAQ,EAAEC,WAAW,CAAE,GAAGJ,QAAQ,CAAC,EAAE,CAAC;;EAE9C;EACA,MAAMK,YAAY,GAAIC,KAAK,IAAK;IAC9B;IACAA,KAAK,CAACC,cAAc,EAAE;IAEtB,MAAMC,WAAW,GAAG;MAClBL;IACF,CAAC;;IAED;IACAD,OAAO,CAACM,WAAW,CAAC;;IAEpB;IACAJ,WAAW,CAAC,EAAE,CAAC;IACf;EACF,CAAC;;EAED;EACA,oBACE;IAAM,QAAQ,EAAEC,YAAa;IAAC,EAAE,EAAC,YAAY;IAAA,wBAC3C;MACE,IAAI,EAAC,UAAU;MACf,WAAW,EAAC;MACZ;MAAA;MACA,KAAK,EAAEF;MACP;MACA;MACA;MACA;MACA;MAAA;MACA,QAAQ,EAAEG,KAAK,IAAIF,WAAW,CAACE,KAAK,CAACG,MAAM,CAACC,KAAK,CAAE;MACnD,EAAE,EAAC,UAAU;MACb,QAAQ;IAAA;MAAA;MAAA;MAAA;IAAA,QACR,eAGF;MAAQ,IAAI,EAAC,QAAQ;MAAC,EAAE,EAAC,eAAe;MAAA;IAAA;MAAA;MAAA;MAAA;IAAA,QAAgB;EAAA;IAAA;IAAA;IAAA;EAAA,QACnD;AAEX,CAAC;;AAED;AACE;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AAAA,GA/FIT,MAAM;AAAA,KAANA,MAAM;AAiGZ,eAAeA,MAAM;AAAA;AAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}